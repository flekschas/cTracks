import React from 'react'
import Select from 'react-select'
import hamradio from 'hamradio'

import './RegisterURL.css'

import tracks from './utils/tracks'
import TextInput from './basicComponents/TextInput'
import LabelLayout from './basicComponents/LabelLayout'
import Selector from './basicComponents/Selector'

class RegisterURL extends React.Component {
  constructor(props) {
    super(props)

    this.subscriptions = this.makeSubscriptions()

    this.state = {
      servers: [],
      url: '',
      name: '',
      server: {value: null, label:'', api: ''},
      datatype: {value: 'vector', label: 'vector'},
      filetype: {value: 'hitile', label: 'hitile'}
    }
  }

  componentWillUnmount() {
    this.subscriptions.forEach(sub => sub.unsubscribe())
  }

  makeSubscriptions = () => {
    return [
      hamradio.subscribe(
        'server/add',
        (name, server) => {
          let servers = this.state.servers.concat([{
            label: server.name || server.api,
            value: this.state.servers.length,
            api: server.api
          }])
          this.setState({
            servers: servers,
            server: servers[0]
          })
        }
      )
    ]
  }

  done = () => {
    if (this.state.server.value !== null && this.state.url !== '') {
      hamradio.publish(
        'registerURL',
        {
          server: this.state.server.api,
          url: this.state.url,
          name: this.state.name,
          datatype: this.state.datatype.value,
          filetype: this.state.filetype.value
        }
      )
    }
  }

	render () {
		return (
      <div>
        <LabelLayout label="Register URL"
          inner=<TextInput value={this.state.url} update={val => this.setState({url:val})}/>
        />
        <LabelLayout label="Name"
          inner=<TextInput value={this.state.name} update={val => this.setState({name:val})}/>
        />
        <LabelLayout label="Registry Server"
          inner=<Selector
            value={this.state.serverIndex}
            options={this.state.servers}
            onChange={val => this.setState({serverIndex: val})}
          />
        />
        <LabelLayout label="Data Type"
          inner=<Selector
            value={this.state.datatype}
            options={Object.keys(tracks.trackDataTypes).map(datatype => { return {label: datatype, value: datatype} })}
            onChange={val => this.setState({datatype: val})}
          />
        />
        <LabelLayout label="File Type"
          inner=<Selector
            value={this.state.filetype}
            options={tracks.fileTypes.map(filetype => { return {label: filetype, value: filetype} })}
            onChange={val => this.setState({filetype: val})}
          />
        />
        <button type="button" className="btn btn-default Button" onClick={this.done}>Register</button>
      </div>
    )
	}
}


export default RegisterURL;
