import React from 'react'
import hamradio from 'hamradio'

import CheckBox from './CheckBox'
import TrackSpec from './TrackSpec'
import TrackAdd from './TrackAdd'

import './TracksMenu.css'


class TracksMenu extends React.Component {
  constructor (props) {
    super(props);

    this.toggleCheckBoxGlobal = this.toggleCheckBoxGlobal.bind(this);
    this.toggleCheckBoxFocus = this.toggleCheckBoxFocus.bind(this);
    this.createCheckBox = this.createCheckBox.bind(this);
    this.createCheckBoxes = this.createCheckBoxes.bind(this);

    this.state = {
      editTrack: null
    }
	}

  toggleCheckBoxGlobal (name) {
    for (var i = 0; i < this.props.tracks.length; i++) {
      if (this.props.tracks[i].track.name === name) {
        let track = {
          ...this.props.tracks[i],
          global: !this.props.tracks[i].global
        }
        hamradio.publish('track/modify', track)
        break;
      }
    }
  }

  toggleCheckBoxFocus (name) {
    for (var i = 0; i < this.props.tracks.length; i++) {
      if (this.props.tracks[i].track.name === name) {
        let track = {
          ...this.props.tracks[i],
          focus: !this.props.tracks[i].focus
        }
        hamradio.publish('track/modify', track)
        break;
      }
    }
  }

  editTrack = (track) => {
    this.setState({
      editTrack: track
    })
  }

  createCheckBox (track, index) {
    var KeyGlobal = track.track.name + '_globalView';
    var KeyFocus = track.track.name + '_focusView';
    return <tr key={index}>
      <td>
        <CheckBox className="CheckBox"
          label={track.track.name}
          InitialState={track.global}
          handleCheckBoxChange={this.toggleCheckBoxGlobal}
          key={KeyGlobal}
        />
      </td>
      <td>
        <CheckBox className="CheckBox"
          label={track.track.name}
          InitialState={track.focus}
          handleCheckBoxChange={this.toggleCheckBoxFocus}
          key={KeyFocus}
        />
      </td>
      <td>
        <label className="CheckBoxLabel">{track.track.name}</label>
      </td>
      <td>
        <button className="btn btn-default Button" onClick={() => this.editTrack(track)}>edit</button>
      </td>
    </tr>
  }

  createCheckBoxes () {
  	return this.props.tracks.length ? (<table>
      <tbody>
        <tr>
          <td><label className="CheckBoxTitle">Global</label></td>
          <td><label className="CheckBoxTitle">Focus</label></td>
          <td><label className="CheckBoxTitle">Track name</label></td>
          <td><label className="CheckBoxTitle"></label></td>
        </tr>
        {this.props.tracks.map(this.createCheckBox)}
      </tbody>
    </table>) : null
}

	render () {
		return !this.state.editTrack ? (
      <div>
  			<label>Tracks</label>
        {this.createCheckBoxes()}
        <TrackAdd
          servers={this.props.servers}
          order={this.props.tracks.length}
          excludeTracks={this.props.tracks.map(track => track.track.tilesetUid)}
        />
      </div>
		) : (
      <div>
  			<label>Higlass - Edit Track</label>
        <TrackSpec track={this.state.editTrack} servers={this.props.servers} done={() => this.editTrack(null)}/>
      </div>
    )
	}
}


export default TracksMenu;
