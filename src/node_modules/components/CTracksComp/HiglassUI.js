import React from 'react';
import PropTypes from 'prop-types';

import * as hglib from 'higlass';
import './HiglassUI.css'

import 'higlass/build/hglib.css';

function sleep (time) {
  return new Promise((resolve) => setTimeout(resolve, time));
}

class HiglassUI extends React.Component {
  constructor(props) {
    super(props);

    this.prevViewConfig = JSON.stringify(props.ViewConfig);

    //Binding functions
    this.launchHgLib = this.launchHgLib.bind(this);
    this.Test = this.Test.bind(this);
  }

  shouldComponentUpdate(newProps, newState) {
    if (this.prevViewConfig === newProps.ViewConfig) {
      return false;
    }

    //console.log('yes', newProps.ViewConfig);
    //console.log("shouldComponentUpdate: HiglassUI");
    this.prevViewConfig = newProps.ViewConfig;
    return true;
  }


  launchHgLib(ViewConfig, options) {
    return (element) => {
      if (element && ViewConfig) {
        hglib.createHgComponent(
          element,
          ViewConfig,
          options,
          function (api) {
            console.log("HGC callback!");
            window.hgApi = api;
            //this.Test();
          }
        );
        //console.log("this.Test() outside of direct callback!");
        //this.Test();
      }
    }
  }

  Test() {
    console.log("Test function");
    sleep(10000).then(() => {
      // Do something after the sleep!
      this.props.onHiglassUpdated();
    })
  }

  componentDidMount() {
    console.log("componentDidMount");
    //this.props.onHiglassUpdated();
    sleep(2000).then(() => {
      // Do something after the sleep!
      this.props.onHiglassUpdated();
    })
  }

  componentDidUpdate() {
    console.log("componentDidUpdate");
    this.props.onHiglassUpdated();
  }


  render () {
    return (
        <div className = "higlass"
          ref={this.launchHgLib(
            JSON.parse(this.props.ViewConfig),
            { bounded: false }
          )}>
        </div>
    )
  }
}

HiglassUI.propTypes = {
  ViewConfig: PropTypes.string,
  onHiglassUpdated: PropTypes.func,
}

export default HiglassUI;